name: 🧪 PR Quality Gate

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-gate:
    name: 🧪 Quality Gate
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🔍 Lint code
      run: npm run lint

    - name: 🧪 Run tests with coverage
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

    - name: 📊 Coverage threshold check
      run: |
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        echo "Current coverage: $COVERAGE%"
        
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "❌ Coverage is below 80% threshold"
          exit 1
        else
          echo "✅ Coverage meets 80% threshold"
        fi

    - name: 📦 Test build
      run: npm run build

    - name: 🔍 Check for TODO/FIXME comments
      run: |
        TODO_COUNT=$(grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules | wc -l)
        echo "Found $TODO_COUNT TODO/FIXME comments"
        
        if [ $TODO_COUNT -gt 5 ]; then
          echo "⚠️ Too many TODO/FIXME comments ($TODO_COUNT). Please address some before merging."
          # Don't fail, just warn
        fi

    - name: 📊 Bundle size comparison
      run: |
        echo "Comparing bundle sizes with main branch..."
        # This would compare with the main branch bundle size
        # Implementation would depend on storing baseline metrics

    - name: ✅ Quality gate passed
      run: echo "🎉 All quality checks passed!"

  accessibility-test:
    name: ♿ Accessibility Test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 📦 Build application
      run: npm run build

    - name: 🚀 Start application
      run: |
        npm install -g http-server
        http-server dist/angular-expense-tracker/browser -p 3000 &
        sleep 5

    - name: ♿ Run accessibility tests
      run: |
        npm install -g @axe-core/cli
        axe http://localhost:3000 --exit