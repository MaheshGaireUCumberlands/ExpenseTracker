# Production Docker Compose
version: '3.8'

services:
  # Production Frontend with Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: expense-tracker-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    networks:
      - expense-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.expense-tracker.rule=Host(`expense-tracker.local`)"
      - "traefik.http.services.expense-tracker.loadbalancer.server.port=80"

  # Production Backend
  backend:
    image: node:20-alpine
    container_name: expense-tracker-backend-prod
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./db.json:/app/db.json:ro
      - ./package.json:/app/package.json:ro
    command: >
      sh -c "npm install -g json-server@1.0.0-beta.3 &&
             json-server --watch db.json --host 0.0.0.0 --port 3000 --no-cors"
    networks:
      - expense-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/expenses"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse Proxy (Optional - for advanced setups)
  # traefik:
  #   image: traefik:v2.10
  #   container_name: traefik
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - expense-tracker-network

networks:
  expense-tracker-network:
    driver: bridge